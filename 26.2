#include <iostream>

class Array
{
    int* data;
    int size;
public:
    Array(int s) : size(s)
    {
        data = new int[size];
        for (int i = 0; i < size; ++i)
        {
            data[i] = 0;
        }
    }

    Array(const Array& other) : size(other.size)
    {
        data = new int[size];
        for (int i = 0; i < size; ++i)
            data[i] = other.data[i];
    }

    Array(Array&& other)
    {
        data = other.data;
        size = other.size;
        other.data = nullptr;
        other.size = 0;
    }

    ~Array()
    {
        delete[] data;
    }

    void print() const
    {
        if (data == nullptr)
        {
            std::cout << "(array moved or empty)\n";
            return;
        }
        for (int i = 0; i < size; ++i)
        {
            std::cout << data[i] << ' ';
        }
        std::cout << '\n';
    }
};

int main()
{
    Array a1(5);
    std::cout << "a1 (before moving): ";
    a1.print();

    Array a2 = std::move(a1);

    std::cout << "a1 (after moving): ";
    a1.print();

    std::cout << "a2 (new array): ";
    a2.print();

    return 0;
}
